HTTP header:-
--------------
HTTP header fields provide required information about the request or response, or about the object sent in the message body. 

There are four types of HTTP message headers:-

1)General-header: These header fields have general applicability for both request and response messages.

2)Client Request-header: These header fields have applicability only for request messages.

3)Server Response-header: These header fields have applicability only for response messages.

4)Entity-header: These header fields define meta information about the entity-body or, 
if no body is present, about the resource identified by the request.


Client Request Headers:-
---------------------------------------------------------------------------------------------------------------------------------------------------

1)Authorization:-
---------------------
The Authorization request-header field value consists of credentials containing the authentication 
information of the user agent for the realm of the resource being requested. 
The general syntax is:

Authorization : credentials
The HTTP/1.0 specification defines the BASIC authorization scheme, where the authorization parameter is the 
string of username:password encoded in base 64. Following is an example:

Authorization: BASIC Z3Vlc3Q6Z3Vlc3QxMjM=
The value decodes into is guest:guest123 where guest is user ID and guest123 is the password.

2)Cookie:-
--------------------
The Cookie request-header field value contains a name/value pair of information stored for that URL. 
Following is the general syntax:

Cookie: name=value
Multiple cookies can be specified separated by semicolons as follows:

ex:-Cookie: name1=value1;name2=value2;name3=value3

3)Expect:-
---------------------------
The Expect request-header field is used to indicate that a particular set of server behaviors is required by the client. 
The general syntax is:

Expect : 100-continue | expectation-extension
If a server receives a request containing an Expect field that includes an expectation-extension 
that it does not support, it must respond with a 417 (Expectation Failed) status.

4)From:-
--------------------
The From request-header field contains an Internet e-mail address for the human user who controls the requesting user agent. 
Following is a simple example:

From: webmaster@w3.org
This header field may be used for logging purposes and as a means for identifying the source of invalid or unwanted requests.

5)Host:-
-----------------
The Host request-header field is used to specify the Internet host and the port number of the resource being requested. 
The general syntax is:

Host : "Host" ":" host [ ":" port ] ;
A host without any trailing port information implies the default port, which is 80. 
For example, a request on the origin server for http://www.w3.org/pub/WWW/ would be:

GET /pub/WWW/ HTTP/1.1
Host: www.w3.org

6)If-Match:-
-----------------------
The If-Match request-header field is used with a method to make it conditional. 
This header requests the server to perform the requested method only if the given value in this tag matches 
the given entity tags represented by ETag. The general syntax is:

If-Match : entity-tag
An asterisk (*) matches any entity, and the transaction continues only if the entity exists. Following are possible examples:

If-Match: "xyzzy"
If-Match: "xyzzy", "r2d2xxxx", "c3piozzzz"
If-Match: *
If none of the entity tags match, or if "*" is given and no current entity exists, 
the server must not perform the requested method, and must return a 412 (Precondition Failed) response.

7)If-Modified-Since:-
-------------------------
The If-Modified-Since request-header field is used with a method to make it conditional. 
If the requested URL has not been modified since the time specified in this field, 
an entity will not be returned from the server; instead, a 304 (not modified) response will be returned without any message-body. 
The general syntax of if-modified-since is:

If-Modified-Since : HTTP-date
An example of the field is:

If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT
If none of the entity tags match, or if "*" is given and no current entity exists, the server must not perform the requested method, and must return a 412 (Precondition Failed) response.

8)If-None-Match:-
-------------------------
The If-None-Match request-header field is used with a method to make it conditional. 
This header requests the server to perform the requested method only if one of the given value in this tag matches the 
given entity tags represented by ETag. The general syntax is:

If-None-Match : entity-tag
An asterisk (*) matches any entity, and the transaction continues only if the entity does not exist. Following are the possible examples:

If-None-Match: "xyzzy"
If-None-Match: "xyzzy", "r2d2xxxx", "c3piozzzz"
If-None-Match: *

9)Proxy-Authorization:-
-----------------------------
The Proxy-Authorization request-header field allows the client to identify itself (or its user) to a proxy which requires authentication. 
Here is the general syntax:

Proxy-Authorization : credentials
The Proxy-Authorization field value consists of credentials containing the authentication information of the user agent for the 
proxy and/or realm of the resource being requested.


Entity Headers:-
-------------------------------------------------------------------------------------------------------------------------------------------------
1)Allow:-
------------
The Allow entity-header field lists the set of methods supported by the resource identified by the Request-URI. The general syntax is:

Allow : Method
You can specify multiple methods separated by commas. Following is a simple example:

Allow: GET, HEAD, PUT
This field cannot prevent a client from trying other methods.

2)Content-Encoding:-
----------------------
The Content-Encoding entity-header field is used as a modifier to the media-type. The general syntax is:

Content-Encoding : content-coding
The content-coding is a characteristic of the entity identified by the Request-URI. Following is a simple example:

Content-Encoding: gzip
If the content-coding of an entity in a request message is not acceptable to the origin server, the server should respond with a 
status code of 415 (Unsupported Media Type).

3)Content-Language:-
-------------------------
The Content-Language entity-header field describes the natural language(s) of the intended audience for the enclosed entity. 
Following is the general syntax:

Content-Language : language-tag
Multiple languages may be listed for content that is intended for multiple audiences. Following is a simple example:

Content-Language: mi, en
The primary purpose of Content-Language is to allow a user to identify and differentiate entities according to the user's own preferred language.

4)Content-Length:-
-----------------------
The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, 
sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent, 
had the request been a GET. The general syntax is:

Content-Length : DIGITS
Following is a simple example:

Content-Length: 3495
Any Content-Length greater than or equal to zero is a valid value.

5)Content-Location:-
------------------------
The Content-Location entity-header field may be used to supply the resource location for the entity enclosed in 
the message when that entity is accessible from a location separate from the requested resource's URI. The general syntax is:

Content-Location:  absoluteURI | relativeURI 
Following is a simple example:

Content-Location: http://www.tutorialspoint.org/http/index.htm
The value of Content-Location also defines the base URI for the entity.

6)Content-MD5:-
-------------------
The Content-MD5 entity-header field may be used to supply an MD5 digest of the entity for checking the integrity 
of the message upon receipt. The general syntax is:

Content-MD5  : md5-digest using base64 of 128 bit MD5 digest as per RFC 1864
Following is a simple example:

Content-MD5  : 8c2d46911f3f5a326455f0ed7a8ed3b3
The MD5 digest is computed based on the content of the entity-body, including any content-coding that has been applied, but not including any transfer-encoding applied to the message-body.

7)Content-Range:-
---------------------
The Content-Range entity-header field is sent with a partial entity-body to specify where in the full entity-body the 
partial body should be applied. The general syntax is:

Content-Range : bytes-unit SP first-byte-pos "-" last-byte-pos
Examples of byte-content-range-spec values, assuming that the entity contains a total of 1234 bytes:

- The first 500 bytes:
Content-Range : bytes 0-499/1234

- The second 500 bytes:
Content-Range : bytes 500-999/1234

- All except for the first 500 bytes:
Content-Range : bytes 500-1233/1234

- The last 500 bytes:
Content-Range : bytes 734-1233/1234
When an HTTP message includes the content of a single range, this content is transmitted with a Content-Range header, 
and a Content-Length header showing the number of bytes actually transferred. For example,

HTTP/1.1 206 Partial content
Date: Wed, 15 Nov 1995 06:25:24 GMT
Last-Modified: Wed, 15 Nov 1995 04:58:08 GMT
Content-Range: bytes 21010-47021/47022
Content-Length: 26012
Content-Type: image/gif

8)Content-Type:-
-------------------------
The Content-Type entity-header field indicates the media type of the entity-body sent to the recipient or, 
in the case of the HEAD method, the media type that would have been sent, had the request been a GET. The general syntax is:

Content-Type : media-type
Following is an example:

Content-Type: text/html; charset=ISO-8859-4

9)Expires:-
------------------
The Expires entity-header field gives the date/time after which the response is considered stale. The general syntax is:

Expires : HTTP-date
Following is an example:

Expires: Thu, 01 Dec 1994 16:00:00 GMT

10)Last-Modified:-
----------------------
The Last-Modified entity-header field indicates the date and time at which the origin server believes the 
variant was last modified. The general syntax is:

Last-Modified: HTTP-date
Following is an example:

Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT
  



